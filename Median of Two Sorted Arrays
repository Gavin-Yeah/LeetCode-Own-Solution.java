/*
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
Beat 85.99% Java solutions
*/

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
     List <Integer> num = new ArrayList<Integer>();
    int j=0, i=0;
 
   
        search1:   for(;i<nums1.length;i++){
         for(;j<nums2.length;j++){
            if(nums1[i]>=nums2[j]){
                num.add(nums2[j]);
            } else{
                num.add(nums1[i]);
                continue search1;
            }      
         }
            if(j==nums2.length){
                 num.add(nums1[i]);
             }
     }
        if(i==nums1.length){
             for(;j<nums2.length;j++){
             num.add(nums2[j]);
             }
        }
        int size=num.size();
        if(size%2==0){
            return ((double)(num.get(size/2-1)+num.get(size/2)))/2;
        }
    else{
        return (double)num.get(size/2);
    }}
}
